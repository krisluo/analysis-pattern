@startuml
package user{
    abstract class Duck {
        FlyBehavior flyBehavior
        QuackBehavior QuackBehavior

        abstract display()
        swim()
        performQuack()
        performFly()
        setFlyBehavior()
        setQuackBehavior()
    }

    Duck <|-- MallardDuck
    Duck <|-- RedheadDuck
    Duck <|-- RubberDuck
    Duck <|-- DecoyDuck
}

package FlyBehavior {
    interface FlyBehavior{
        fly()
    }

    FlyBehavior <|.. FlyWithWings
    FlyBehavior <|.. FlyNoWay
}

package QuackBehavior {
    interface QuackBehavior{
        quack()
    }

    QuackBehavior <|.. Quack
    QuackBehavior <|.. Squeak
    QuackBehavior <|.. MuteQuack
}

Duck --> FlyBehavior
Duck --> QuackBehavior
@enduml